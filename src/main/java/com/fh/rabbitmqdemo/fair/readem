工作模式下的能者多劳：
    1个生产者 多个消费者
修改三行代码
    channel.basicQos(count);
    channel.basicConsume(QUEUE_NAME, false, consumer);
    channel.basicAck(delivery.getEnvelope().getDeliveryTag(), false);
    第一行count为1时，表示队列只有在收到消费者发回的上一条消息 ack 确认后，才会向该消费者发送下一条消息。
    count的默认值为0，即没有限制，队列会将所有消息尽快发给消费者
    第二行和第三行是将自动模式改为手动模式

手动模式和自动模式的区别

    消费者从队列中获取消息，服务端如何知道消息已经被消费呢？
    模式1：自动确认
    只要消息从队列中获取，无论消费者获取到消息后是否成功消息，都认为是消息已经成功消费。
    模式2：手动确认
    消费者从队列中获取消息后，服务器会将该消息标记为不可用状态，等待消费者的反馈，如果消费者一直没有反馈，
    那么该消息将一直处于不可用状态。
